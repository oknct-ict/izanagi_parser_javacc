/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. ExprParser.jj */
/*@egen*///\u30aa\u30d7\u30b7\u30e7\u30f3\u5b9a\u7fa9
options{
	STATIC=false;
	           
	             
	                                     
	DEBUG_PARSER = true;
}

//\u30d1\u30fc\u30b5\u30fc\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9
PARSER_BEGIN(ExprParser)
package izanagi.expr.parser;
public class ExprParser/*@bgen(jjtree)*/implements ExprParserTreeConstants/*@egen*/{/*@bgen(jjtree)*/
  protected JJTExprParserState jjtree = new JJTExprParserState();

/*@egen*/
}
PARSER_END(ExprParser)

//\u30c8\u30fc\u30af\u30f3\u306e\u5b9a\u7fa9
SKIP:
{
	" " | "\r" | "\t" | "\n"
}
TOKEN:
{
		<PLUS : "+">
	|   <MINUS: "-">
	|	<MUL: "*">
	|	<DIV: "/">
	|	<MOD: "%">
	|	<POWER: "^">
	|	<AND: "And">
	|	<OR: "Or">
	|	<NOT: "Not">
	|	<ASSIGN: "=">
	|	<GE: ">=">
	|	<GT: ">">
	|	<LE: "<=">
	|	<LT: "<">
	|	<EQ: "==">
	|	<NEQ: "!=">
	|	<LPAREN: "(">
	|	<RPAREN: ")">
	|	<STR_START: "\""> : IN_STR
	|   <INTEGER: (["0" - "9"])+>
	|	<FLOAT: (["0" - "9"])+ "." (["0" - "9"])+>
}

<IN_STR> MORE:
{
		<~["\"", "\\", "\n", "\r", "\t"]>
	|	<"\\\"">
			{image.deleteCharAt(image.length() - 2); }
	|	<"\\n" | "\\r">
			{image.delete(image.length() - 2, image.length()); image.append("\n");}
	|	<"\\t">
			{image.delete(image.length() - 2, image.length()); image.append("\t");}
}

<IN_STR> TOKEN:
{
	<STR: "\"">{
		image.deleteCharAt(image.length() - 1);
		matchedToken.image = image.toString();
	} : DEFAULT
}

//\u6587\u6cd5\u306e\u5b9a\u7fa9
ASTStart Start():
{/*@bgen(jjtree) Start */
  ASTStart jjtn000 = new ASTStart(JJTSTART);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Start */
        try {
/*@egen*/
	EqualCompExpr()/*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn000, true);
                          jjtc000 = false;
                        }
/*@egen*/ { return jjtn000;}/*@bgen(jjtree)*/
        } catch (Throwable jjte000) {
          if (jjtc000) {
            jjtree.clearNodeScope(jjtn000);
            jjtc000 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte000 instanceof RuntimeException) {
            throw (RuntimeException)jjte000;
          }
          if (jjte000 instanceof ParseException) {
            throw (ParseException)jjte000;
          }
          throw (Error)jjte000;
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
          }
        }
/*@egen*/
}


void EqualCompExpr()      :
{}
{
	SizeCompExpr() (
				<EQ>/*@bgen(jjtree) #Eq( 2) */
                                     {
                                       ASTEq jjtn001 = new ASTEq(JJTEQ);
                                       boolean jjtc001 = true;
                                       jjtree.openNodeScope(jjtn001);
                                     }
                                     try {
/*@egen*/ SizeCompExpr()/*@bgen(jjtree)*/
                                     } catch (Throwable jjte001) {
                                       if (jjtc001) {
                                         jjtree.clearNodeScope(jjtn001);
                                         jjtc001 = false;
                                       } else {
                                         jjtree.popNode();
                                       }
                                       if (jjte001 instanceof RuntimeException) {
                                         throw (RuntimeException)jjte001;
                                       }
                                       if (jjte001 instanceof ParseException) {
                                         throw (ParseException)jjte001;
                                       }
                                       throw (Error)jjte001;
                                     } finally {
                                       if (jjtc001) {
                                         jjtree.closeNodeScope(jjtn001,  2);
                                       }
                                     }
/*@egen*/       
			|	<NEQ>/*@bgen(jjtree) #NEq( 2) */
                                      {
                                        ASTNEq jjtn002 = new ASTNEq(JJTNEQ);
                                        boolean jjtc002 = true;
                                        jjtree.openNodeScope(jjtn002);
                                      }
                                      try {
/*@egen*/ SizeCompExpr()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte002) {
                                        if (jjtc002) {
                                          jjtree.clearNodeScope(jjtn002);
                                          jjtc002 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte002 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte002;
                                        }
                                        if (jjte002 instanceof ParseException) {
                                          throw (ParseException)jjte002;
                                        }
                                        throw (Error)jjte002;
                                      } finally {
                                        if (jjtc002) {
                                          jjtree.closeNodeScope(jjtn002,  2);
                                        }
                                      }
/*@egen*/         )*
}

void SizeCompExpr()      :
{}
{
	AddExpr() (
				<GE>/*@bgen(jjtree) #Ge( 2) */
                                     {
                                       ASTGe jjtn001 = new ASTGe(JJTGE);
                                       boolean jjtc001 = true;
                                       jjtree.openNodeScope(jjtn001);
                                     }
                                     try {
/*@egen*/ AddExpr()/*@bgen(jjtree)*/
                                     } catch (Throwable jjte001) {
                                       if (jjtc001) {
                                         jjtree.clearNodeScope(jjtn001);
                                         jjtc001 = false;
                                       } else {
                                         jjtree.popNode();
                                       }
                                       if (jjte001 instanceof RuntimeException) {
                                         throw (RuntimeException)jjte001;
                                       }
                                       if (jjte001 instanceof ParseException) {
                                         throw (ParseException)jjte001;
                                       }
                                       throw (Error)jjte001;
                                     } finally {
                                       if (jjtc001) {
                                         jjtree.closeNodeScope(jjtn001,  2);
                                       }
                                     }
/*@egen*/       
			|	<GT>/*@bgen(jjtree) #Gt( 2) */
                                     {
                                       ASTGt jjtn002 = new ASTGt(JJTGT);
                                       boolean jjtc002 = true;
                                       jjtree.openNodeScope(jjtn002);
                                     }
                                     try {
/*@egen*/ AddExpr()/*@bgen(jjtree)*/
                                     } catch (Throwable jjte002) {
                                       if (jjtc002) {
                                         jjtree.clearNodeScope(jjtn002);
                                         jjtc002 = false;
                                       } else {
                                         jjtree.popNode();
                                       }
                                       if (jjte002 instanceof RuntimeException) {
                                         throw (RuntimeException)jjte002;
                                       }
                                       if (jjte002 instanceof ParseException) {
                                         throw (ParseException)jjte002;
                                       }
                                       throw (Error)jjte002;
                                     } finally {
                                       if (jjtc002) {
                                         jjtree.closeNodeScope(jjtn002,  2);
                                       }
                                     }
/*@egen*/       
			|	<LE>/*@bgen(jjtree) #Le( 2) */
                                     {
                                       ASTLe jjtn003 = new ASTLe(JJTLE);
                                       boolean jjtc003 = true;
                                       jjtree.openNodeScope(jjtn003);
                                     }
                                     try {
/*@egen*/ AddExpr()/*@bgen(jjtree)*/
                                     } catch (Throwable jjte003) {
                                       if (jjtc003) {
                                         jjtree.clearNodeScope(jjtn003);
                                         jjtc003 = false;
                                       } else {
                                         jjtree.popNode();
                                       }
                                       if (jjte003 instanceof RuntimeException) {
                                         throw (RuntimeException)jjte003;
                                       }
                                       if (jjte003 instanceof ParseException) {
                                         throw (ParseException)jjte003;
                                       }
                                       throw (Error)jjte003;
                                     } finally {
                                       if (jjtc003) {
                                         jjtree.closeNodeScope(jjtn003,  2);
                                       }
                                     }
/*@egen*/       
			|	<LT>/*@bgen(jjtree) #Lt( 2) */
                                     {
                                       ASTLt jjtn004 = new ASTLt(JJTLT);
                                       boolean jjtc004 = true;
                                       jjtree.openNodeScope(jjtn004);
                                     }
                                     try {
/*@egen*/ AddExpr()/*@bgen(jjtree)*/
                                     } catch (Throwable jjte004) {
                                       if (jjtc004) {
                                         jjtree.clearNodeScope(jjtn004);
                                         jjtc004 = false;
                                       } else {
                                         jjtree.popNode();
                                       }
                                       if (jjte004 instanceof RuntimeException) {
                                         throw (RuntimeException)jjte004;
                                       }
                                       if (jjte004 instanceof ParseException) {
                                         throw (ParseException)jjte004;
                                       }
                                       throw (Error)jjte004;
                                     } finally {
                                       if (jjtc004) {
                                         jjtree.closeNodeScope(jjtn004,  2);
                                       }
                                     }
/*@egen*/        )*
}

void AddExpr()      :
{}
{
	MulExpr() (
				<PLUS>/*@bgen(jjtree) #Add( 2) */
                                        {
                                          ASTAdd jjtn001 = new ASTAdd(JJTADD);
                                          boolean jjtc001 = true;
                                          jjtree.openNodeScope(jjtn001);
                                        }
                                        try {
/*@egen*/  MulExpr()/*@bgen(jjtree)*/
                                        } catch (Throwable jjte001) {
                                          if (jjtc001) {
                                            jjtree.clearNodeScope(jjtn001);
                                            jjtc001 = false;
                                          } else {
                                            jjtree.popNode();
                                          }
                                          if (jjte001 instanceof RuntimeException) {
                                            throw (RuntimeException)jjte001;
                                          }
                                          if (jjte001 instanceof ParseException) {
                                            throw (ParseException)jjte001;
                                          }
                                          throw (Error)jjte001;
                                        } finally {
                                          if (jjtc001) {
                                            jjtree.closeNodeScope(jjtn001,  2);
                                          }
                                        }
/*@egen*/        
			|   <MINUS>/*@bgen(jjtree) #Sub( 2) */
                                    {
                                      ASTSub jjtn002 = new ASTSub(JJTSUB);
                                      boolean jjtc002 = true;
                                      jjtree.openNodeScope(jjtn002);
                                    }
                                    try {
/*@egen*/ MulExpr()/*@bgen(jjtree)*/
                                    } catch (Throwable jjte002) {
                                      if (jjtc002) {
                                        jjtree.clearNodeScope(jjtn002);
                                        jjtc002 = false;
                                      } else {
                                        jjtree.popNode();
                                      }
                                      if (jjte002 instanceof RuntimeException) {
                                        throw (RuntimeException)jjte002;
                                      }
                                      if (jjte002 instanceof ParseException) {
                                        throw (ParseException)jjte002;
                                      }
                                      throw (Error)jjte002;
                                    } finally {
                                      if (jjtc002) {
                                        jjtree.closeNodeScope(jjtn002,  2);
                                      }
                                    }
/*@egen*/         )*
}

void MulExpr()      :
{}
{
	UniExpr() (
				<MUL>/*@bgen(jjtree) #Mul( 2) */
                                      {
                                        ASTMul jjtn001 = new ASTMul(JJTMUL);
                                        boolean jjtc001 = true;
                                        jjtree.openNodeScope(jjtn001);
                                      }
                                      try {
/*@egen*/ UniExpr()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte001) {
                                        if (jjtc001) {
                                          jjtree.clearNodeScope(jjtn001);
                                          jjtc001 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte001 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte001;
                                        }
                                        if (jjte001 instanceof ParseException) {
                                          throw (ParseException)jjte001;
                                        }
                                        throw (Error)jjte001;
                                      } finally {
                                        if (jjtc001) {
                                          jjtree.closeNodeScope(jjtn001,  2);
                                        }
                                      }
/*@egen*/        
			|	<DIV>/*@bgen(jjtree) #Div( 2) */
                                      {
                                        ASTDiv jjtn002 = new ASTDiv(JJTDIV);
                                        boolean jjtc002 = true;
                                        jjtree.openNodeScope(jjtn002);
                                      }
                                      try {
/*@egen*/ UniExpr()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte002) {
                                        if (jjtc002) {
                                          jjtree.clearNodeScope(jjtn002);
                                          jjtc002 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte002 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte002;
                                        }
                                        if (jjte002 instanceof ParseException) {
                                          throw (ParseException)jjte002;
                                        }
                                        throw (Error)jjte002;
                                      } finally {
                                        if (jjtc002) {
                                          jjtree.closeNodeScope(jjtn002,  2);
                                        }
                                      }
/*@egen*/        
			|	<MOD>/*@bgen(jjtree) #Mod( 2) */
                                      {
                                        ASTMod jjtn003 = new ASTMod(JJTMOD);
                                        boolean jjtc003 = true;
                                        jjtree.openNodeScope(jjtn003);
                                      }
                                      try {
/*@egen*/ UniExpr()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte003) {
                                        if (jjtc003) {
                                          jjtree.clearNodeScope(jjtn003);
                                          jjtc003 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte003 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte003;
                                        }
                                        if (jjte003 instanceof ParseException) {
                                          throw (ParseException)jjte003;
                                        }
                                        throw (Error)jjte003;
                                      } finally {
                                        if (jjtc003) {
                                          jjtree.closeNodeScope(jjtn003,  2);
                                        }
                                      }
/*@egen*/        
			|	<POWER>/*@bgen(jjtree) #Power( 2) */
                                        {
                                          ASTPower jjtn004 = new ASTPower(JJTPOWER);
                                          boolean jjtc004 = true;
                                          jjtree.openNodeScope(jjtn004);
                                        }
                                        try {
/*@egen*/ UniExpr()/*@bgen(jjtree)*/
                                        } catch (Throwable jjte004) {
                                          if (jjtc004) {
                                            jjtree.clearNodeScope(jjtn004);
                                            jjtc004 = false;
                                          } else {
                                            jjtree.popNode();
                                          }
                                          if (jjte004 instanceof RuntimeException) {
                                            throw (RuntimeException)jjte004;
                                          }
                                          if (jjte004 instanceof ParseException) {
                                            throw (ParseException)jjte004;
                                          }
                                          throw (Error)jjte004;
                                        } finally {
                                          if (jjtc004) {
                                            jjtree.closeNodeScope(jjtn004,  2);
                                          }
                                        }
/*@egen*/          
			|	<AND>/*@bgen(jjtree) #And( 2) */
                                      {
                                        ASTAnd jjtn005 = new ASTAnd(JJTAND);
                                        boolean jjtc005 = true;
                                        jjtree.openNodeScope(jjtn005);
                                      }
                                      try {
/*@egen*/ UniExpr()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte005) {
                                        if (jjtc005) {
                                          jjtree.clearNodeScope(jjtn005);
                                          jjtc005 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte005 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte005;
                                        }
                                        if (jjte005 instanceof ParseException) {
                                          throw (ParseException)jjte005;
                                        }
                                        throw (Error)jjte005;
                                      } finally {
                                        if (jjtc005) {
                                          jjtree.closeNodeScope(jjtn005,  2);
                                        }
                                      }
/*@egen*/        
			|	<OR>/*@bgen(jjtree) #Or( 2) */
                                     {
                                       ASTOr jjtn006 = new ASTOr(JJTOR);
                                       boolean jjtc006 = true;
                                       jjtree.openNodeScope(jjtn006);
                                     }
                                     try {
/*@egen*/ UniExpr()/*@bgen(jjtree)*/
                                     } catch (Throwable jjte006) {
                                       if (jjtc006) {
                                         jjtree.clearNodeScope(jjtn006);
                                         jjtc006 = false;
                                       } else {
                                         jjtree.popNode();
                                       }
                                       if (jjte006 instanceof RuntimeException) {
                                         throw (RuntimeException)jjte006;
                                       }
                                       if (jjte006 instanceof ParseException) {
                                         throw (ParseException)jjte006;
                                       }
                                       throw (Error)jjte006;
                                     } finally {
                                       if (jjtc006) {
                                         jjtree.closeNodeScope(jjtn006,  2);
                                       }
                                     }
/*@egen*/       
			|	<NOT>/*@bgen(jjtree) #Not( 2) */
                                      {
                                        ASTNot jjtn007 = new ASTNot(JJTNOT);
                                        boolean jjtc007 = true;
                                        jjtree.openNodeScope(jjtn007);
                                      }
                                      try {
/*@egen*/ UniExpr()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte007) {
                                        if (jjtc007) {
                                          jjtree.clearNodeScope(jjtn007);
                                          jjtc007 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte007 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte007;
                                        }
                                        if (jjte007 instanceof ParseException) {
                                          throw (ParseException)jjte007;
                                        }
                                        throw (Error)jjte007;
                                      } finally {
                                        if (jjtc007) {
                                          jjtree.closeNodeScope(jjtn007,  2);
                                        }
                                      }
/*@egen*/         )*
}

void UniExpr():
{/*@bgen(jjtree) UniExpr */
  ASTUniExpr jjtn000 = new ASTUniExpr(JJTUNIEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/ Token t;}
{/*@bgen(jjtree) UniExpr */
                try {
/*@egen*/
		Prime()/*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn000, true);
                          jjtc000 = false;
                        }
/*@egen*/ {jjtn000.nodeValue = "+";}
	|	t = <MINUS> {jjtn000.nodeValue = t.image;} Prime()/*@bgen(jjtree)*/
                } catch (Throwable jjte000) {
                  if (jjtc000) {
                    jjtree.clearNodeScope(jjtn000);
                    jjtc000 = false;
                  } else {
                    jjtree.popNode();
                  }
                  if (jjte000 instanceof RuntimeException) {
                    throw (RuntimeException)jjte000;
                  }
                  if (jjte000 instanceof ParseException) {
                    throw (ParseException)jjte000;
                  }
                  throw (Error)jjte000;
                } finally {
                  if (jjtc000) {
                    jjtree.closeNodeScope(jjtn000, true);
                  }
                }
/*@egen*/
}

void Prime()      :
{}
{
		Integer()
	|	Float()
	|	String()
	|	<LPAREN> AddExpr() <RPAREN>
}

void Integer():
{/*@bgen(jjtree) Integer */
  ASTInteger jjtn000 = new ASTInteger(JJTINTEGER);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/ Token t;}
{/*@bgen(jjtree) Integer */
        try {
/*@egen*/
	t = <INTEGER>/*@bgen(jjtree)*/
                      {
                        jjtree.closeNodeScope(jjtn000, true);
                        jjtc000 = false;
                      }
/*@egen*/ { jjtn000.nodeValue = t.image;}/*@bgen(jjtree)*/
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
          }
        }
/*@egen*/
}

void Float():
{/*@bgen(jjtree) Float */
  ASTFloat jjtn000 = new ASTFloat(JJTFLOAT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/ Token t;}
{/*@bgen(jjtree) Float */
        try {
/*@egen*/
	t = <FLOAT>/*@bgen(jjtree)*/
                    {
                      jjtree.closeNodeScope(jjtn000, true);
                      jjtc000 = false;
                    }
/*@egen*/ {jjtn000.nodeValue = t.image;}/*@bgen(jjtree)*/
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
          }
        }
/*@egen*/
}

void String():
{/*@bgen(jjtree) String */
  ASTString jjtn000 = new ASTString(JJTSTRING);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/ Token t;}
{/*@bgen(jjtree) String */
        try {
/*@egen*/
	<STR_START>
	t = <STR>/*@bgen(jjtree)*/
                  {
                    jjtree.closeNodeScope(jjtn000, true);
                    jjtc000 = false;
                  }
/*@egen*/ {jjtn000.nodeValue = t.image;}/*@bgen(jjtree)*/
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
          }
        }
/*@egen*/
}